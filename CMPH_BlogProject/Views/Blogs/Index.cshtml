@model IPagedList<CMPH_BlogProject.Models.Blog>
@using PagedList.Mvc
@using PagedList
@{
    ViewBag.Title = "Index";
}
<section id="projects" class="projects-section bg-light">
    <div class="container">
        <h2>Check Out Some Of My Blogs</h2>
        <p>
            @if (User.IsInRole("Admin"))
            {
                @Html.ActionLink("Create New", "Create")
                <br />
                @Html.ActionLink("View Unpublished", "Unpublished")
            }
        </p>
        @using (Html.BeginForm("Index", "BlogPosts", FormMethod.Get, htmlAttributes: new { @class = "form" }))
        {
            <div class="controls controls-row search-row">
                <input id="searchStr" name="searchStr" class="input-block-level" type="text" placeholder="Search">
                <button id="searchStr" name="searchStr" class="btn btn-success" type="submit"><i class="icon-search"></i></button>
            </div>
        }

        <div class="row"><br /></div>

        <style>
            table, th, td {
                border: 1px solid black;
            }
        </style>


        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Created)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Updated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Abstract)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Slug)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Body)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MediaURL)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Published)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                if (item.Published == true)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Created)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Updated)
                        </td>
                        <td>
                            @Html.Raw(item.Title)
                        </td>
                        <td>
                            @Html.Raw(item.Abstract)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Slug)
                        </td>
                        <td>
                            @Html.Raw(item.Body)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MediaURL)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Published)
                        </td>
                        <td>
                            @Html.ActionLink("Details", "Details", new { slug = item.Slug })
                            @Html.ActionLink("View Comments", "Index", "Comments")

                            @if (User.IsInRole("Admin"))
                            {
                                @Html.ActionLink("Edit", "Edit", new { slug = item.Slug })
                                @Html.ActionLink("Delete", "Delete", new { slug = item.Slug })
                            }
                            @if (User.IsInRole("Admin") || User.IsInRole("Mod"))
                            {
                                @Html.ActionLink("Comment", "Create", "Comments")
                            }
                        </td>
                    </tr>
                }
            }
        </table>
        @foreach (var item in Model)
        {
            if (item.MediaURL != null && item.Published == true)
            {
                @Html.DisplayFor(modelItem => item.Title)
                <img class="img-responsive" src="@item.MediaURL" alt="">
            }
        }
    </div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount	
    @*@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))*@
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchStr = ViewBag.Search }));
    @*This lets the search carry over to a new page*@

</section>
